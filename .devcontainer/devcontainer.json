{
  "name": "M365 Copilot Dev (Default)",
  "build": {
    "dockerfile": "Dockerfile.standalone",
    "context": ".."
  },
  "workspaceFolder": "/workspace",
  "customizations": {
    "vscode": {
      "extensions": [
        // .NET extensions
        "ms-dotnettools.csharp",
        "ms-dotnettools.csdevkit",
        "ms-dotnettools.vscode-dotnet-runtime",
        "ms-dotnettools.vscodeintellicode-csharp",
        "adrianwilczynski.asp-net-core-snippet-pack",
        // SQL extensions for EF Core/SQLite support
        "qwtel.sqlite-viewer",
        // General development extensions
        "mdickin.markdown-shortcuts",
        "esbenp.prettier-vscode",
        "github.copilot",
        "github.copilot-chat",
        "eamodio.gitlens",
        "streetsidesoftware.code-spell-checker",
        "humao.rest-client",
        "ms-vscode.powershell",
        // Azure extensions
        "ms-vscode.azurecli",
        "ms-azuretools.vscode-azurefunctions",
        "ms-azuretools.vscode-bicep",
        // GitHub extensions
        "GitHub.vscode-pull-request-github",
        // YAML and configuration
        "redhat.vscode-yaml",
        // Theme
        "alex-pattison.theme-cobalt3",
        // Package management
        "aliasadidev.nugetpackagemanagergui",
        // Teams and M365 extensions
        "teamsdevapp.vscode-adaptive-cards",
        "teamsdevapp.ms-teams-vscode-extension",
        "ms-copilotstudio.vscode-copilotstudio",
        "teamsdevapp.vscode-ai-foundry",
        "ms-graph.kiota",
        "mermaidchart.vscode-mermaid-chart",
        "ms-semantic-kernel.semantic-kernel"
      ],
      "settings": {
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
          "source.organizeImports": "explicit"
        },
        "typescript.preferences.quoteStyle": "single",
        "typescript.updateImportsOnFileMove.enabled": "always",
        "javascript.updateImportsOnFileMove.enabled": "always",
        "typescript.preferences.importModuleSpecifier": "relative",
        "csharp.format.enable": true,
        "[typescript]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode"
        },
        "[csharp]": {
          "editor.defaultFormatter": "ms-dotnettools.csharp"
        },
        // GitHub Copilot Settings
        "chat.agent.enabled": true,
        "chat.mcp.discovery.enabled": true,
        "chat.detectParticipant.enabled": true,
        "terminal.integrated.suggest.enabled": true,
        "github.copilot.chat.codeGeneration.instructions": [
          {
            "text": "In TypeScript never underscore for private field names instead use camelCase."
          },
          {
            "text": "Always use 'const' for variables that are not reassigned."
          }
        ],
        "github.copilot.chat.pullRequestDescriptionGeneration.instructions": [
          {
            "text": "Describe the pull request in detail, including the purpose of the changes and any relevant context in a list format."
          }
        ],
        "github.copilot.chat.commitMessageGeneration.instructions": [
          {
            "text": "Be extremely detailed with the file changes and the reason for the change in a list format."
          }
        ],
        "github.copilot.chat.codesearch.enabled": true,
        "github.copilot.chat.editor.temporalContext.enabled": true,
        "github.copilot.chat.generateTests.codeLens": true,
        "github.copilot.chat.languageContext.typescript.enabled": true,
        "github.copilot.chat.search.semanticTextResults": true,
        "github.copilot.chat.startDebugging.enabled": true,
        "github.copilot.enable": {
          "*": true,
          "markdown": true,
          "plaintext": false,
          "scminput": false,
          "yaml": true
        },
        "github.copilot.nextEditSuggestions.enabled": true,
        "github.copilot.selectedCompletionModel": ""
      }
    }
  },
  "forwardPorts": [
    3000,
    4200,
    5000,
    5001,
    8080
  ],
  "portsAttributes": {
    "3000": {
      "label": "Frontend Dev Server",
      "onAutoForward": "openPreview"
    },
    "4200": {
      "label": "Angular Dev Server",
      "onAutoForward": "openPreview"
    },
    "5000": {
      "label": ".NET API (HTTP)",
      "onAutoForward": "openPreview"
    },
    "5001": {
      "label": ".NET API (HTTPS)",
      "onAutoForward": "openPreview"
    },
    "8080": {
      "label": "General Web Server",
      "onAutoForward": "openPreview"
    }
  },
  "containerEnv": {
    "NODE_ENV": "development",
    "TZ": "UTC",
    "DOTNET_CLI_TELEMETRY_OPTOUT": "1",
    "DOTNET_SKIP_FIRST_TIME_EXPERIENCE": "1"
  },
  "remoteEnv": {
    "PATH": "${containerEnv:PATH}:/root/.dotnet/tools"
  },
  "initializeCommand": "echo 'Starting M365 Copilot Development Environment (Default)...'",
  "postCreateCommand": "/usr/local/bin/init-container.sh",
  "postStartCommand": {
    "info": "echo 'ðŸš€ M365 Copilot Development Environment Ready! ðŸŽ‰'"
  }
}